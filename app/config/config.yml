imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret: "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
#    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            datetime: AppBundle\Doctrine\DBAL\Types\UTCDateTimeType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        result_cache_driver:
            cache_provider: array_cache
        query_cache_driver:
            cache_provider: array_cache
        metadata_cache_driver:
            cache_provider: array_cache

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: AppBundle\Entity\User

# https://habrahabr.ru/post/278123/
fos_rest:
    versioning:
        enabled: true
        resolvers:
            custom_header: true # X-Accept-Version header
    body_listener: true
    view:
        view_response_listener: true
    serializer:
        serialize_null: true
    body_converter:
        enabled: true
    format_listener:
        enabled: true
        rules:
            - { path: ^/api,  priorities: ['json'], fallback_format: json, prefer_extension: true }
            - { path: ^/api, fallback_format: html, attributes: { _controller: FOS\RestBundle\Controller\ExceptionController } }
            - { path: ^/, priorities: [ 'html', '*/*'], fallback_format: html, prefer_extension: true }

jms_serializer:
    property_naming:
        separator:  _
        lower_case: true

    metadata:
        cache: file
        debug: "%kernel.debug%"
        file_cache:
            dir: "%kernel.cache_dir%/serializer"
        directories:
            FOSUserBundle:
                namespace_prefix: FOS\UserBundle
                path: "%kernel.root_dir%/config/serializer/FosUserBundle"
            AppBundle:
                namespace_prefix: AppBundle
                path: "%kernel.root_dir%/config/serializer/AppBundle"
        auto_detection: true

doctrine_cache:
    aliases:
        doctrine_cache.default_provider: file_system_cache
        doctrine_cache.default_query_cache: file_system_cache
    providers:
        file_system_cache:
            type: file_system
        array_cache:
            type: array

go_aop:
    # This setting enables or disables an automatic AOP cache warming in the application.
    # By default, cache_warmer is enabled (true), disable it only if you have serious issues with
    # cache warming process.
    cache_warmer: false

    # Additional settings for the Go! AOP kernel initialization
    options:
        # Debug mode for the AOP, enable it for debugging and switch off for production mode to have a
        # better runtime performance for your application
        debug: %kernel.debug%

        # Application root directory, AOP will be applied ONLY to the files in this directory, by default it's
        # src/ directory of your application.
        app_dir: "%kernel.root_dir%/../src"

        # AOP cache directory where all transformed files will be stored.
        cache_dir: %kernel.cache_dir%/aspect

        # Whitelist is array of directories where AOP should be enabled, leave it empty to process all files
        include_paths: []

        # Exclude list is array of directories where AOP should NOT be enabled, leave it empty to process all files
        exclude_paths: []

        # AOP container class name can be used for extending AOP engine or services adjustment
        # container_class: ~

        # List of enabled features for AOP kernel, this allows to enable function interception, support for
        # read-only file systems, etc. Each item should be a name of constant from the `Go\Aop\Features` class.
        features: []
